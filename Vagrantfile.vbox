require_relative 'vagrant/patches.rb'

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/focal64"
  config.env.enable
  local_env = { 'WORKDIR' => ENV['VAGRANT_WORKDIR'] }
  local_env['USER_NAME'] = ENV['VAGRANT_SSH_USER']

  config.vm.provider "virtualbox" do |vb, override|
    # vb.gui = true
    vb.linked_clone = true
    vb.memory = 4096
    vb.cpus = 2
    override.vm.boot_timeout = 600
    override.ssh.username = ENV['VAGRANT_SSH_USER']
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder ".", ENV['VAGRANT_WORKDIR'], type: "rsync", rsync__exclude: ".git/", rsync__auto: true

  config.vm.provision "shell", path: "./vagrant/provision/ubuntu-base.bash", env: local_env

  # this vm is not reusable, everything runs directly inside the vm
  config.vm.define "vm", autostart: false do |vm|
    vm.vm.provision "shell", path: "./vagrant/provision/ubuntu-dev.bash", env: local_env
  end
  # this vm is reusable, everything runs inside docker
  config.vm.define "docker", autostart: false do |docker|
    docker.vm.provision "shell", path: "#{ENV['iscript']}/docker/docker-ubuntu", privileged: false
  end
  # this vm is not reusable, everything runs directly inside the vm
  config.vm.define "vnc", autostart: false do |vnc|
    vnc.vm.provision "shell", path: "./vagrant/provision/ubuntu-dev.bash", env: local_env
    vnc.vm.provision "shell", path: "./vagrant/provision/ubuntu-desktop-vnc.bash", privileged: false, env: local_env
  end
end
