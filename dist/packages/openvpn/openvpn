#!/usr/bin/env bash

set -euEo pipefail

readonly PUBLIC_IP="$(wget -qO - ifconfig.me)"

# Environment
readonly OPENVPN_HOST="${OPENVPN_HOST:-"$PUBLIC_IP"}"
readonly OPENVPN_PORT="${OPENVPN_PORT:-1194}"
readonly OPENVPN_PROTOCOL="${OPENVPN_PROTOCOL:-'udp'}"

# Global Variables
readonly CLIENT_NAME="client-$(echo "${RANDOM}${RANDOM}" | md5sum | cut -c1-5)"

cat <<EOF
Environment parameters:
OPENVPN_HOST="${OPENVPN_HOST}"
OPENVPN_PORT="${OPENVPN_PORT}"
OPENVPN_PROTOCOL="${OPENVPN_PROTOCOL}"
EOF

echo ">> Working directory: $(pwd)"

if [[ ! -f docker-compose.yml ]]; then
  echo ">> Creating docker-compose.yml in current directory"

  cat <<-EOF >docker-compose.yml
  version: "3.3"
  services:
    openvpn:
      image: "kylemanna/openvpn:2.4"
      container_name: openvpn
      restart: always
      ports:
        - "${OPENVPN_PORT}:1194"
      volumes:
        - "openvpn_data:/etc/openvpn"
      cap_add:
        - NET_ADMIN

  volumes:
    openvpn_data:
EOF
  echo ">> DONE. Creating docker-compose.yml in current directory"
else
  cat <<-EOF
  >> Using user defined docker-compose.yml in current directory
  >> Verify that values defined in docker-compose.yml match with
     those in Environment paramenters
EOF
fi

# Initialize the configuration files
echo ">> Initializing configuration files"
docker-compose run --rm openvpn \
  ovpn_genconfig -u "${OPENVPN_PROTOCOL}://${OPENVPN_HOST}"
# Add 'duplicate-cn' option to vpn config
docker-compose run --rm --entrypoint /bin/sh \
  openvpn \
  -c 'echo duplicate-cn >> /etc/openvpn/openvpn.conf'
echo ">> DONE. Initializing configuration files"

# Initialize certificates
echo ">> Initializing certificates"
echo "$OPENVPN_HOST" |
  docker-compose run --rm openvpn \
    ovpn_initpki nopass
echo ">> DONE. Initializing certificates"

# Generate a client certificate without a passphrase
echo ">> Generating a client certificate without a passphrase"
docker-compose run --rm openvpn \
  easyrsa build-client-full "${CLIENT_NAME}" nopass
echo ">> DONE. Generating a client certificate without a passphrase"

# Client configuration

## Retrieve the client configuration with embedded certificates
echo "Retrieving the client configuration with embedded certificates"
docker-compose run --rm openvpn \
  ovpn_getclient "${CLIENT_NAME}" >"${CLIENT_NAME}.ovpn"
echo "DONE. Retrieving the client configuration with embedded certificates"

## Replaces vpn host port on vpn client profile
sed -i "s/1194 ${OPENVPN_PROTOCOL}/${OPENVPN_PORT} ${OPENVPN_PROTOCOL}/" \
  "${CLIENT_NAME}.ovpn"

# Start openvpn
docker-compose up -d
